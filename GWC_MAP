/**
 * Function to mask clouds based on the pixel_qa band of Landsat 8 SR data.
 * @param {ee.Image} image input Landsat 8 SR image
 * @return {ee.Image} cloudmasked Landsat 8 image
 */
function maskL8sr(image) {
  // Bits 3 and 5 are cloud shadow and cloud, respectively.
  var cloudShadowBitMask = (1 << 3);
  var cloudsBitMask = (1 << 5);
  // Get the pixel QA band.
  var qa = image.select('pixel_qa');
  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
                 .and(qa.bitwiseAnd(cloudsBitMask).eq(0));
  return image.updateMask(mask);
}

var dataset = ee.ImageCollection('LANDSAT/LC08/C01/T1_SR')
                  .filterDate('2020-01-01', '2020-02-28')
                  .map(maskL8sr);

var visParams = {
  bands: ['B4', 'B3', 'B2'],
  min: 0,
  max: 3000,
  gamma: 1.4,
};
Map.setCenter(-48.7358, -1.5148, 12);
Map.addLayer(dataset.median(), visParams, 'Mapa');


//NÃ£o Apaga!!!
var ndwi = dataset.median().normalizedDifference(['B3', 'B5']);
var ndwiViz = {min: -1, max: 1, palette: ['0000ff', '00ffff', 'ffff00', 'ff0000', 'ffffff']};

var ndwiMasked = ndwi.updateMask(ndwi.gte(0.10));
Map.addLayer(ndwiMasked, ndwiViz, 'MASCARA NDWI');

var ndci = dataset.median().normalizedDifference(['B3', 'B4']);
var ndciViz = {min: -1, max: 1, palette:['FFFFFF', 'CE7E45', 'DF923D', 'F1B555', 'FCD163', '99B718', '74A901',
    '66A000', '529400', '3E8601', '207401', '056201', '004C00', '023B01',
    '012E01', '011D01', '011301']};

var ndciMasked = ndci.updateMask(ndwi.gte(0.10));
Map.addLayer(ndciMasked, ndciViz, 'MASCARA NDCI');
